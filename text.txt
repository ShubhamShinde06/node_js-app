How to install node.js and start
1.npm init
2.create index.js file and some type code
3.open Terminal and than node index.js enter
4.one time type cmd Terminal in ( npm install --save-dev nodemon )
5. package.json in script add text this
(
    "start": "node index.js",
    "dev": "nodemon index.js"
)
6.reactjs import and export enter package.json enter this
( "type": "module" )
7.npm i express
8.npm i mongoose

-----------------------------------------------------------------------

// import http from "http";
// import Maths from './feature.js';
//import fs from "fs";

// const home = fs.readFileSync("./index.html");

// const server = http.createServer((req,res) => {
    
//     if(req.url === "/about") {
//         res.end(`<h1>Love is ${Maths()} </h1>`);
//     } 
//     else if(req.url === "/") {
//         // fs.readFile('./index.html',(err,home)=> {
//         //     res.end(home);
//         // }); 
//         res.end(home);
//     }
//     else{
//         res.end("page not found")
//     }
// })
// server.listen(5000,()=>{
//     console.log("server is working")
// })

import express from 'express';
import path from 'path';
import mongoose from 'mongoose';

mongoose.connect("mongodb://localhost:27017", {
    dbName: "backend",
    })
    .then(()=>console.log("Database Connectrd"))
    .catch((e) => console.log(e))

const msg = new mongoose.Schema({
    name : String,
    email: String,
});

const Messge = mongoose.model("Message", msg);

const app = express();

//use middleware
app.use(express.static(path.join(path.resolve(),"public")));
app.use((express.urlencoded({ extended: true })));

app.set("view engine","ejs")

app.get("/",(req,res) => {
    res.render("index", {name:"sh"});
})

app.get("/add", (req, res) => {

    Messge.create({name:"Shubham",email:"Don@gmail.com"})
    .then(() => {
        res.send("Nice")
    })
})

app.get("/success", (req, res) => {
    res.render("success")
})

app.post("/contect", (req, res) => {
    const messageData = ({usersname: req.body.name,email: req.body.email});
    console.log(messageData)
    res.redirect("/success")
});

app.get("/api/users", (req, res) => {
    res.json({
        users,
    });
});

app.listen(5000, () => {
    console.log("server is working")
})


----------------------------------------------------

import express from 'express';
import path, { resolve } from 'path';
import mongoose from 'mongoose';
import cookieParser from 'cookie-parser';

const app = express();

// Connection for database
mongoose.connect("mongodb://localhost:27017",{
    dbName : "backend",
})
.then(() => {
    console.log("Database connected");
})
.catch((err) => {
    console.log(err);
})
const userSchema = new mongoose.Schema({
    name:String,
    email:String,
});
const User = mongoose.model("User",userSchema)

// using middleware
app.use(express.static(path.join(path.resolve(), "public")));
app.use(express.urlencoded({ extended: true }))
app.use(cookieParser());

// setting up vies Engine
app.set("view engine", "ejs")

app.get("/", (req,res)=> {

    const {token} = req.cookies;

    if(token){
        res.render("logout")
    } else {
        res.render("login")
    }  

})

app.get("/success", (req,res)=> {
    res.render("success")
})

app.get("/users", (req,res) => {
    res.json({
        users,
    });
})

app.get("/add", (req,res)=> {

    Message.create({
        name:"Shubham",
        email:"shubham@gmail.com"
    })
    .then(() => {
        res.send("Nice")
    })
    .catch((err) => {
        console.log("Not Down...")
    })
 
})

app.get("/logout",(req,res)=> {
    res.cookie("token",null,{
        httpOnly:true,
        expires:new Date(Date.now()),
    });
    res.redirect("/")
})

app.post("/", async (req,res)=> {
    const { name,email } = req.body;
    await Message.create({ name:name,email:email })
    res.redirect("/success")
})

app.post("/login",(req,res)=> {
    res.cookie("token","iamin",{
        httpOnly:true,expires:new Date(Date.now()+60*1000)
    });
    res.redirect("/")
})

app.listen(5000, ()=> {
    console.log("server is working");
})